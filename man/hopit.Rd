% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/hopit.R
\name{hopit}
\alias{hopit}
\title{Generalized hierarchical ordered threshold models.}
\usage{
hopit(latent.formula, thresh.formula = ~1, data, decreasing.levels,
  start = NULL, overdispersion = FALSE, design = list(),
  weights = NULL, link = c("probit", "logit"), control = list(),
  na.action = na.fail)
}
\arguments{
\item{latent.formula}{a formula used to model latent variable. It should not contain any threshold variable.
To specify interactions between latent and threshold variables see details.}

\item{thresh.formula}{a formula used to model threshold variable. It should not contain any latent variable.
To specify interactions between latent and threshold variables see details.
Any dependent variable (left side of "~" in the formula) will be ignored.}

\item{data}{a data frame including all modeled variables.}

\item{decreasing.levels}{a logical indicating if self-reported health classes are ordered in decreasing order.}

\item{start}{a vector with starting coefficient values in the form \code{c(latent_parameters, threshold_lambdas, threshold_gammas)} or
\code{c(latent_parameters, threshold_lambdas, threshold_gammas, logTheta)} if the \code{overdispersion == TRUE}.}

\item{overdispersion}{a logical indicting if to fit additional parameter theta, which models a variance of the error term.}

\item{design}{an optional survey design. Use \code{\link[survey]{svydesign}} function to specify the design.
The design cannot be specified together with parameter \code{weights}.}

\item{weights}{optional model weights. Use design to construct survey weights.}

\item{link}{a link function. The possible values are \code{"probit"} (default) and \code{"logit"}.}

\item{control}{a list with control parameters. See \code{\link{hopit.control}}.}

\item{na.action}{a function which indicates what should happen when the \code{data} contain \code{NA}s.
The default is \code{\link[stats]{na.fail}},
which generates an error if any missing value is found. The alternative is \code{\link[stats]{na.omit}}
(or \code{\link[stats]{na.exclude}} equivalently), which removes rows with missing
values from the \code{data}. Using \code{\link[stats]{na.pass}} will lead to an error.}
}
\value{
a \code{hopit} object used by other functions and methods. The object is a list with following components:
\item{control}{ a list with control parameters. See \code{\link{hopit.control}}.}
\item{link}{ a used link funtion.}
\item{hasdisp}{ a logical indicating if overdispersion was modeled.}
\item{use.weights}{ a logical indicating if any weights were used.}
\item{weights}{ a vector with model weights.}
\item{latent.formula}{ a latent formula used to fit the model.}
\item{latent.mm}{ a latent model matrix.}
\item{latent.terms}{ a used latent variables and their interactions.}
\item{cross.inter.latent}{  part of the latent formula modeling cross-interactions in the latent model}
\item{thresh.formula}{ a threshold formula used to fit the model.}
\item{thresh.mm}{ threshold model matrix.}
\item{thresh.extd}{ an extended threshold model matrix.}
\item{thresh.terms}{ used threshold variables and their interactions.}
\item{cross.inter.thresh}{ part of the threshold formula modeling cross-interactions in the threshold model}
\item{thresh.no.cov}{ a logical indicating if gamma parameters are present.}
\item{parcount}{ a 3-element vector with number of parmeters for latent variable (beta),
threshold intercept (lambda), and threshold covariates (gamma).}
\item{coef}{ a vector with model coefficients.}
\item{coef.ls}{ coefficients as a list.}
\item{start}{ a vector with starting vlues of coefficients.}
\item{alpha}{ estimated individual-specific thresholds.}
\item{y_i}{ a vector with individual responses - the response variable.}
\item{y_latent_i}{ a vector with predicted latent measures for each individual.}
\item{Ey_i}{ a vector with predicted categorical responses for each individual.}
\item{J}{ a number of response levels.}
\item{N}{ a number of observations.}
\item{deviance}{ a deviance.}
\item{LL}{ a log likelihood.}
\item{AIC}{ a AIC for models without survey design.}
\item{vcov}{ a variance-covariance matrix.}
\item{vcov.basic}{ a variance-covariance matrix ignoring survey design.}
\item{hessian}{ a Hessian matrix.}
\item{estfun}{ a gradient (a vector of partial derivatives) of the log likelihood function at estimated coefficient values.}
\item{YYY1,YYY2,YY3}{ an internal objects used for calculation of gradient and Hessian functions.}
}
\description{
The ordered response data classifies a measure of interest into ordered categories
collected during a survey. For example, if the dependent variable were a happiness
rating, then a respondent typically answers a question like: “Taking all things
together, would you say you are ... ?" and then selects from response options
along the lines of: "very happy", "pretty happy", "not too happy", "very unhappy"
\insertCite{Liao2005}{hopit}. Similarly if interviewees are asked to evaluate their
health in general (e.g. “Would you say your health is ... ?”) they may choose among
several categories, such as "very good", "good", "fair", "bad", and "very bad"
\insertCite{King2004,Jurges2007,Rebelo2014}{hopit}. In political sciences a respondent
may be asked for an opinion about recent legislation (e.g. “Rate your feelings about
the proposed legislation.") and asked to choose among categories like: "strongly
oppose", "mildly oppose", "indifferent", "mildly support", "strongly support"
\insertCite{GreeneHensher2010}{hopit}. It is easy to imagine other multi-level ordinal
variables that might be used during a survey and to which the methodology described
below could be applied to.\cr

Practically, it is assumed that when responding to a survey question about their
general happiness, health, feeling, attitude or other status, participants assess
their true value of this unobserved continuous variable, and project it to a provided
discrete scale. The thresholds that each individual uses to categorize their true status
into a specific response option may be affected by the choice of a reference group,
earlier life experiences, and cross-cultural differences in using scales, and thus,
may differ across individuals depending on their gender, age, cultural background,
education, and personality traits, among other factors.\cr

From the reporting behavior modeling perspective, one of the main tasks is to compute
this continuous estimate of individuals’ underlying, latent measure based on several
specific characteristics of the considered response (e.g. health variables or happiness
variables) and accounting also for variations in reporting across socio-demographic
and cultural groups. More specifically, to build the latent, underlying measure a
generalized hierarchical ordered threshold model is fitted, which regresses the
reported status/attitude/feeling on two sets of independent variables
\insertCite{Boes2006,Green2014}{hopit}. When a dependent reported ordered variable is
self-rated health status then the first set of variables - health variables -
assesses individuals’ specific aspects of health, and might include chronic
conditions, mobility level, difficulties with a range of daily activities,
performance on grip strength test, anthropometric measures, lifestyle behaviors,
etc. Using the second set of independent variables (threshold variables), the model
also adjusts for the differences across socio-demographic and cultural groups like
cultural background, gender, age, education, etc. \insertCite{King2004,Jurges2007}{hopit}.\cr

Ordered threshold models are used to fit ordered categorical dependent variables.
The generalized ordered threshold models \insertCite{Terza1985,Boes2006,Green2014}{hopit}
are an extension to the ordered threshold models \insertCite{McKelvey1975}{hopit}.
In the latter models, the thresholds are constant, whereas generalized models allows
thresholds to be dependent on covariates.
\insertCite{GreeneHensher2010,Green2014;textual}{hopit} pointed out that also
thresholds must be ordered so that a model has a sense.
This motivated Greene and coauthors to call this models \emph{HOPIT}, which stands
for hierarchical ordered probit models.

The fitted \emph{hopit} model is used to analyse heterogeneity in reporting behavior.
See \code{\link{standardizeCoef}}, \code{\link{latentIndex}},
\code{\link{getCutPoints}}, and \code{\link{getLevels}}.
}
\details{
The function fits generelaized hierarchical ordered threshold models.\cr

\code{latent.formula} models latent variable.
if the response variable is self-rated health then latent measure can depend on different health
conditions and diseases (latent variables are called health variables).
Latent variables are modeled with parallel regression assumption. According to the assumption, coefficients,
which describe the relationship between lowest and all higher response categories, are the same as those coefficients,
which describe the relationship between another (e.g. adjacent) lowest and the remaining higher response categories.
The predicted latent variable is modeled as a linear function of health variables and corresponding coefficients.\cr

\code{thresh.formula} models threshold variable.
The thresholds (cut points, \code{alpha}) are modeled by threshold variables \code{gamma} and intercepts \code{lambda}.
It is assumed that they model contextual characteristics of the respondent (e.g. country, gender, age, etc. ).
Threshold variables are modeled without parallel regression assumption, thus each threshold is modeled by
a variable independently \insertCite{Boes2006,Green2014}{hopit}.
\code{hopit}() function uses parametrization of tresholds proposed by \insertCite{Jurges2007;textual}{hopit}.\cr

\code{decreasing.levels} it is the logical that determines the ordering of levels of the categorical response variable.
It is always good to check first the ordering of the levels before starting (see example 1)\cr

It is possible to model interactions, including interactions beetwen latent and threshold variables. Interactions added to the latent formula
models only the latent measure and interactions modeled in threshold formula models only thresholds.
The general rule for modeling any kind of interactions is to use "*" to specify interactions within latent (or threshold) formula and to
use ':' to specify interactions between latent and threshold variables. In the latter case the main effects of an interaction must be also speciffied,
i.e. main latent effects must be speciffied in the latent formula and main threshold effect must be speciffied in the threshold formula.
See also \code{Example 3} below.\cr

For more details please see the package vignette: "introduction_to_hopit", which is also available under this link:
\href{https://github.com/MaciejDanko/hopit/blob/master/vignettes/introduction_to_hopit.pdf}{introduction_to_hopit.pdf}
}
\examples{
# DATA
data(healthsurvey)

# first determine the order of levels of dependent variable
levels(healthsurvey$health)

# Example 1 ---------------------

# the order of response levels decreases from the best health to
# the worst health, hence hopit() parameter decreasing.levels = TRUE
# fitting the model:
model1 <- hopit(latent.formula = health ~ hypertension + high_cholesterol +
                heart_attack_or_stroke + poor_mobility + very_poor_grip +
                depression + respiratory_problems +
                IADL_problems + obese + diabetes + other_diseases,
              thresh.formula = ~ sex + ageclass + country,
              decreasing.levels = TRUE,
              control = list(trace = FALSE),
              data = healthsurvey)

# summarize the fit:
summary(model1)

# extract parameters in a form of list
cm1 <- coef(model1, aslist = TRUE)

# names of returned coefficients
names(cm1)

# extract latent health coefficients
cm1$latent.params

# check the fit
profile(model1)

# Example 2 ---------------------

# incorporate survey design
design <- svydesign(ids = ~ country + psu, weights = healthsurvey$csw,
data = healthsurvey)

model2 <- hopit(latent.formula = health ~ hypertension + high_cholesterol +
                  heart_attack_or_stroke + poor_mobility +
                  very_poor_grip + depression + respiratory_problems +
                  IADL_problems + obese + diabetes + other_diseases,
                thresh.formula = ~ sex + ageclass + country,
                decreasing.levels = TRUE,
                design = design,
                control = list(trace = FALSE),
                data = healthsurvey)

# compare latent variables
cbind('No survey design' = coef(model1, aslist = TRUE)$latent.par,
'Has survey design' = coef(model2, aslist = TRUE)$latent.par)

# Example 3 ---------------------

# defining interactions beetween threshold and latent variables

# correctly defined interactions:
model3 <- hopit(latent.formula = health ~ hypertension + high_cholesterol +
                heart_attack_or_stroke + poor_mobility * very_poor_grip +
                depression + respiratory_problems +
                IADL_problems + obese + diabetes + other_diseases +
                sex : depression + sex : diabetes + ageclass:obese,
              thresh.formula = ~ sex * ageclass + country + sex : obese,
              decreasing.levels = TRUE,
              control = list(trace = FALSE),
              data = healthsurvey)

# badly defined interactions:
\dontrun{
# 1) lack of main effect of "other_diseases" in any formula
# it can be solved by adding " + other_diseases" to the latent formula
model3a <- hopit(latent.formula = health ~ hypertension + high_cholesterol +
                heart_attack_or_stroke + poor_mobility + very_poor_grip +
                depression + respiratory_problems +
                IADL_problems + obese + diabetes + other_diseases : sex,
              thresh.formula = ~ sex + ageclass + country,
              decreasing.levels = TRUE,
              control = list(trace = FALSE),
              data = healthsurvey)

# 2) main effect of sex present in both formulas.
# it can be solved by exchanging "*" into ":" in "other_diseases * sex"
model3b <- hopit(latent.formula = health ~ hypertension + high_cholesterol +
                heart_attack_or_stroke + poor_mobility + very_poor_grip +
                depression + respiratory_problems +
                IADL_problems + obese + diabetes + other_diseases * sex,
              thresh.formula = ~ sex + ageclass + country,
              decreasing.levels = TRUE,
              control = list(trace = FALSE),
              data = healthsurvey)
}

# Example 4 ---------------------

# a model accounting for overdispersion
model4 <- hopit(latent.formula = health ~ hypertension + high_cholesterol +
                heart_attack_or_stroke + poor_mobility + very_poor_grip +
                depression + respiratory_problems +
                IADL_problems + obese + diabetes + other_diseases,
              thresh.formula = ~ sex + ageclass + country,
              overdispersion = TRUE,
              decreasing.levels = TRUE,
              control = list(trace = FALSE),
              data = healthsurvey)

# an estimated variance of the error term:
getTheta(model4)

# compare fit of model1 and model4 suing Likelihood Ratio Test
print(anova(model1, model4), short = TRUE)

# Example 5 ---------------------

\dontrun{
# construct a naive continuous variable:
hs <- healthsurvey
hs$cont_var <- sample(5000:5020,nrow(hs),replace=TRUE)

latent.formula = health ~ hypertension + high_cholesterol +
  heart_attack_or_stroke + poor_mobility + very_poor_grip +
  depression + respiratory_problems +
  IADL_problems + obese + diabetes + other_diseases

# in some cases, when continouse variables are used, the hopit:::get.hopit.start() function
# may not find starting parameters (R version 3.4.4 (2018-03-15)):
model5 <- hopit(latent.formula = latent.formula,
                thresh.formula = ~ sex + cont_var,
                decreasing.levels = TRUE,
                data = hs)

# one of the solutions is to transform one or more continuous variables:
hs$cont_var_t <- hs$cont_var-min(hs$cont_var)

model5b <- hopit(latent.formula = latent.formula,
                 thresh.formula = ~ sex + cont_var_t,
                 decreasing.levels = TRUE,
                 data = hs)

# this can also be done automatically using control parameter
model5c <- hopit(latent.formula = latent.formula,
                 thresh.formula = ~ sex + cont_var,
                 decreasing.levels = TRUE,
                 control = list(transform.thresh = 'min',
                                transform.latent = 'none'),
                 data = hs)

model5d <- hopit(latent.formula = latent.formula,
                 thresh.formula = ~ sex + cont_var,
                 decreasing.levels = TRUE,
                 control = list(transform.thresh = 'scale_01',
                                transform.latent = 'none'),
                 data = hs)

model5e <- hopit(latent.formula = latent.formula,
                 thresh.formula = ~ sex + cont_var,
                 decreasing.levels = TRUE,
                 control = list(transform.thresh = 'standardize',
                                transform.latent = 'none'),
                 data = hs)

model5f <- hopit(latent.formula = latent.formula,
                 thresh.formula = ~ sex + cont_var,
                 decreasing.levels = TRUE,
                 control = list(transform.thresh = 'standardize_trunc',
                                transform.latent = 'none'),
                 data = hs)

round(t(rbind(coef(model5b),
              coef(model5c),
              coef(model5d),
              coef(model5e),
              coef(model5f))),4)

}
}
\references{
\insertAllCited{}
}
\seealso{
\code{\link{coef.hopit}},
\code{\link{profile.hopit}},
\code{\link{hopit.control}},
\code{\link{anova.hopit}},
\code{\link{vcov.hopit}},
\code{\link{logLik.hopit}},
\code{\link{AIC.hopit}},
\code{\link{summary.hopit}},
\code{\link[survey]{svydesign}}, \cr\cr
For heterogeneity in reporting behavior analysis see:\cr
\code{\link{standardizeCoef}},
\code{\link{latentIndex}},
\code{\link{getCutPoints}},
\code{\link{getLevels}}.
}
\author{
Maciej J. Danko
}
